DROP TABLE CLIENTES PURGE;
CREATE TABLE CLIENTES (
  id    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  nome  VARCHAR2(100) NOT NULL,
  email VARCHAR2(120) UNIQUE
);

INSERT INTO CLIENTES (nome, email) VALUES ('Vinnicius', 'vinnicius@senac.br');
INSERT INTO CLIENTES (nome, email) VALUES ('Pedro', 'pedro@senac.br');
INSERT INTO CLIENTES (nome, email) VALUES ('jOAO', 'JOAO@senac.br');
SELECT ID, NOME, EMAIL FROM CLIENTES;

DELETE FROM CLIENTES WHERE NOME - 'jOAO';

CREATE TABLE PRODUTOS (
  id     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  nome   VARCHAR2(100) NOT NULL,
  preco  NUMBER(10,2)  NOT NULL CHECK (preco >= 0),
  tipo   VARCHAR2(50) NOT NULL
);

INSERT INTO PRODUTOS (nome, preco, tipo) VALUES ('Iphone 17', 6000, 'celular')
INSERT INTO PRODUTOS (nome, preco, tipo) VALUES ('notebook m4', 3500, 'notebook')
INSERT INTO PRODUTOS (nome, preco, tipo) VALUES ('tablet samsung', 2999, 'tablet')

SELECT ID, NOME, PRECO, TIPO FROM PRODUTOS;

UPDATE PRODUTOS SET preco = preco * 1.10 WHERE tipo = 'notebook';

CREATE TABLE PEDIDOS (
  id         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  cliente_id NUMBER NOT NULL,
  produto_id NUMBER NOT NULL,
  status     VARCHAR2(20) NOT NULL CHECK (status IN ('ABERTO','FINALIZADO','CANCELADO'))
  );

 INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (1, 1, 'ABERTO')
 INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (2, 2, 'CANCELADO')
 INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (3, 3, 'FINALIZADO')
 INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (1, 2, 'CANCELADO')

 SELECT ID, cliente_id, produto_id, status FROM PEDIDOS;

DELETE FROM PEDIDOS WHERE STATUS = 'CANCELADO';

DROP TABLE CLIENTES_STG PURGE;
CREATE TABLE CLIENTES_STG (
  nome  VARCHAR2(100) NOT NULL,
  email VARCHAR2(120) NOT NULL
);


 INSERT INTO CLIENTES_STG (nome, email) VALUES ('Ana P. Atualizada', 'ana@techplus.com'); 
 INSERT INTO CLIENTES_STG (nome, email) VALUES ('Daniela Nova', 'daniela@techplus.com'); 
SELECT * FROM clientes;


 SELECT nome, email FROM CLIENTES;

 MERGE INTO CLIENTES A 
 USING CLIENTES_STG B 
 ON(A.EMAIL = B.EMAIL)
 WHEN MATCHED THEN
    UPDATE SET A.NOME = B.nome
WHEN NOT MATCHED THEN
    INSERT (nome, email)
    VALUES (B.nome, B.email);
